2.1

create table author 
(author_id INT PRIMARY KEY AUTO_INCREMENT ,
name_author VARCHAR(50))


insert into author (name_author  )
VALUES
('Булгаков М.А.'),
('Достоевский Ф.М.'),
('Есенин С.А.'),
('Пастернак Б.Л.')
;
Select * from author


CREATE TABLE book (
    book_id INT PRIMARY KEY AUTO_INCREMENT, 
    title VARCHAR(50), 
    author_id INT NOT NULL, 
    genre_id INT ,
    price DECIMAL(8,2), 
    amount INT, 
    FOREIGN KEY (author_id)  REFERENCES author (author_id) ,
     FOREIGN KEY (genre_id)  REFERENCES genre (genre_id) 
);



CREATE TABLE book (
    book_id INT PRIMARY KEY AUTO_INCREMENT, 
    title VARCHAR(50), 
    author_id INT NOT NULL, 
    genre_id INT ,
    price DECIMAL(8,2), 
    amount INT, 
    FOREIGN KEY (author_id)  REFERENCES author (author_id) ON DELETE CASCADE ,
     FOREIGN KEY (genre_id)  REFERENCES genre (genre_id) ON DELETE SET NULL
);


2.2
SELECT title, name_genre, price
FROM 
    book INNER JOIN genre
    ON book.genre_id = genre.genre_id
    WHERE amount >8
    ORDER BY price DESC
    
    
select  name_genre  from book right join genre ON book.genre_id=genre.genre_id
WHERE book_id is null


select name_city, name_author,  DATE_ADD('2020-01-01', INTERVAL FLOOR(RAND() * 365) DAY) as Дата  from city CROSS JOIN author 
ORDER BY name_city, Дата DESC


select name_genre,title,name_author from genre inner join book ON genre.genre_id =book.genre_id INNER JOIN author ON book.author_id=author.author_id 
WHERE name_genre LIKE "роман"
ORDER BY title



select name_author, SUM(amount) AS Количество from book AS b RIGHT JOIN author AS a ON b.author_id =a.author_id GROUP BY name_author
HAVING Количество <10 OR Количество IS NULL
ORDER BY Количество; 


select DISTINCT name_author /*,  count(DISTINCT genre_id) */ 
from book AS b  JOIN author AS a ON b.author_id =a.author_id
GROUP BY name_author
HAVING count(DISTINCT genre_id)=1


SELECT title, name_author, name_genre, price, amount
FROM 
    author 
    INNER JOIN book ON author.author_id = book.author_id
    INNER JOIN genre ON  book.genre_id = genre.genre_id
WHERE genre.genre_id in 
        (select genre_id
        from book
        group by genre_id
        having  sum(amount) = (
            select sum(amount) as sum_amount
            from book
            group by genre_id
            having sum_amount
            limit 1))
ORDER BY title

2.3

UPDATE book AS b JOIN author ON b.author_id=author.author_id 
JOIN supply AS s ON b.title=s.title
SET b.amount=b.amount + s.amount,
b.price =(b.price * b.amount + s.price * s.amount)/(b.amount + s.amount),
s.amount = 0
WHERE s.price != b.price AND author.name_author=s.author;
SELECT * FROM book;
SELECT * FROM supply;



/*select *  from author AS a RIGHT JOIN  supply AS s ON a.name_author=s.author;
*/INSERT INTO author (author_id , name_author )

select  supply_id, author  from author AS a RIGHT JOIN  supply AS s ON a.name_author=s.author
WHERE name_author IS NULL;
select * from author


INSERT INTO book ( title ,author_id ,price, amount )
SELECT title, author_id, price, amount
FROM 
    author 
    INNER JOIN supply ON author.name_author = supply.author
WHERE amount <> 0;
select * from book


UPDATE book 
SET genre_id= (select genre_id from genre WHERE genre_id=2)
WHERE book_id=10;
UPDATE book 
SET genre_id= (select genre_id from genre WHERE genre_id=3)
WHERE book_id=11;
select * from book


DELETE FROM author
WHERE author_id IN( 
            SELECT author_id 
            FROM book
            GROUP BY author_id
            HAVING SUM(amount) <= 20
            );
SELECT * FROM author;
SELECT * FROM book;


DELETE FROM genre
WHERE genre_id IN (select genre_id  from book GROUP BY genre_id HAVING COUNT(genre_id)<4);
SELECT * FROM genre;
SELECT * FROM book;



DELETE FROM author
USING 
     author 
     INNER JOIN book ON author.author_id = book.author_id
     INNER JOIN genre ON genre.genre_id = book.genre_id     
WHERE name_genre = 'Поэзия';
SELECT * FROM author;
SELECT * FROM book;


2.4


select buy.buy_id, title, price, bb.amount from client AS c JOIN buy ON c.client_id=buy.client_id JOIN buy_book AS bb ON buy.buy_id=bb.buy_id
JOIN book ON bb.book_id=book.book_id
WHERE name_client = 'Баранов Павел'
ORDER BY buy.buy_id, title

select name_author, title, COUNT(bb.amount) AS Количество  from book AS b LEFT JOIN buy_book AS bb ON b.book_id=bb.book_id JOIN author AS a ON b.author_id=a.author_id
GROUP BY b.title, name_author
ORDER BY name_author, title;

SELECT name_city, COUNT(buy_id) AS Количество FROM 
city
inner join client ON city.city_id = client.city_id
inner join buy ON client.client_id = buy.client_id
group by  name_city 
ORDER BY name_city;

select buy_id , date_step_end from step JOIN buy_step ON step.step_id=buy_step.step_id WHERE buy_step.step_id=1 AND buy_step.date_step_end IS NOT NULL

select   buy_book.buy_id, name_client, SUM(book.price * buy_book.amount) AS Стоимость from
client 
JOIN buy ON client.client_id =buy.client_id 
JoiN buy_book ON buy.buy_id=buy_book.buy_id
JOIN book ON book.book_id=buy_book.book_id 
GROUP BY  buy_book.buy_id
ORDER BY buy_book.buy_id;


select  DISTINCT buy_id, name_step from 
step
JOIN buy_step ON step.step_id=buy_step.step_id 
WHERE  date_step_beg IS NOT NULL AND date_step_end IS NULL

SELECT buy_id,
DATEDIFF(date_step_end,date_step_beg) AS Количество_дней,
IF
(DATEDIFF(date_step_end,date_step_beg) > days_delivery, 
 DATEDIFF(date_step_end,date_step_beg) - days_delivery,
 0) AS Опоздание
FROM buy_step INNER JOIN step USING (step_id)
              INNER JOIN buy USING (buy_id)
              INNER JOIN client USING (client_id)
              INNER JOIN city USING (city_id)
where buy_step.step_id = 3 AND date_step_end IS NOT NULL
ORDER BY buy_id;


select DISTINCT   name_client from    buy
INNER JOIN client USING (client_id)
              INNER JOIN buy_book USING (buy_id)
               INNER JOIN book USING (book_id)
               
               WHERE author_id=2
ORDER BY name_client

select name_genre, SUM(buy_book.amount)  AS Количество 
from genre 
JOIN book USING (genre_id)
JOIN buy_book USING (book_id)
GROUP BY name_genre

HAVING Количество = (SELECT MAX(Количество ) from 
(SELECT SUM(buy_book.amount) AS Количество 
 from genre 
JOIN book USING (genre_id)
JOIN buy_book USING (book_id)
GROUP BY genre.name_genre) q) ;

SELECT YEAR(date_payment) AS Год, MONTHNAME(date_payment)AS Месяц, SUM(price*amount) AS Сумма
FROM buy_archive
GROUP BY Год, Месяц

UNION ALL

SELECT YEAR(date_step_end) AS Год, MONTHNAME(date_step_end)AS Месяц,  SUM(price * buy_book.amount) AS Сумма
FROM buy_step
    INNER JOIN buy_book USING(buy_id)
    INNER JOIN book USING(book_id)
WHERE date_step_end IS NOT NULL AND step_id = 1
GROUP BY Год, Месяц
ORDER BY Месяц ASC, Год ASC;

SELECT title, SUM(quantity) AS Количество, SUM(summa) AS Сумма
FROM
    (
    SELECT book.title, 
           SUM(buy_archive.amount) AS quantity, 
           SUM(buy_archive.amount * buy_archive.price) AS summa
    FROM buy_archive
         INNER JOIN book USING (book_id)
    GROUP BY book.title

    UNION ALL
    SELECT book.title,
           SUM(buy_book.amount) AS quantity,
           SUM(buy_book.amount * book.price) AS summa
    FROM 
        step
        INNER JOIN buy_step USING (step_id)
        INNER JOIN buy_book USING (buy_id)
        INNER JOIN book USING (book_id)
    WHERE step.name_step = 'Оплата' AND date_step_end is not null
    GROUP BY book.title
    ORDER BY summa DESC
    ) query_in

GROUP BY title
ORDER BY Сумма DESC; 


2.5
INSERT into buy ( buy_description, client_id)
select 'Связаться со мной по вопросу доставки' ,( select client_id  from client
WHERE name_client='Попов Илья');
select * from buy

insert into buy_book (buy_id, book_id, amount)
VALUES(5, 8, 2);
insert into buy_book (buy_id, book_id, amount)
VALUES(5, 2, 1);
select * from buy_book

update book JOIN buy_book using (book_id)
SET book.amount = book.amount -buy_book.amount
WHERE buy_id=5;
select * from book

CREATE  table buy_pay AS
select title,name_author,price,buy_book.amount,price*buy_book.amount AS Стоимость  from book JOIN author USING (author_id) JOIN buy_book USING (book_id)
WHERE buy_id = 5
ORDER BY Стоимость ;
select * from buy_pay

CREATE  table buy_pay AS
select buy_id, SUM(buy_book.amount) AS Количество, SUM(price*buy_book.amount) AS Итого  from book JOIN author USING (author_id) JOIN buy_book USING (book_id)
WHERE buy_id = 5
GROUP BY buy_id;
select * from buy_pay

INSERT INTO buy_step (buy_id, step_id)
     SELECT buy_id, step_id
       FROM buy CROSS JOIN step
      WHERE buy_id = 5; 
SELECT * FROM buy_step; 

UPDATE buy_step
SET date_step_beg='2020-04-12'
WHERE buy_id=5 and step_id=1;
SELECT*FROM buy_step;
UPDATE 
  buy_step 
SET 
  date_step_end = IF(
    step_id = (
      SELECT 
        step_id 
      FROM 
        step 
      WHERE 
        name_step = "Оплата"
    ), 
    '2020-04-13', 
    date_step_end
  ), 
  date_step_beg = IF(
    step_id = (
      SELECT 
        step_id 
      FROM 
        step 
      WHERE 
        name_step = "Упаковка"
    ), 
    '2020-04-13', 
    date_step_beg
  )
WHERE buy_id = 5;
  SELECT * FROM buy_step;
  
  
  
  
